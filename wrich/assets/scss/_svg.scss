// # STRING REPLACE
// =====================================================
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// # SVG URL
// =======================
@function svg-url($svg) {
  //
  //  Add missing namespace
  //
  @if not str-index($svg,xmlns) {
    $svg: str-replace(
                    $svg,
                    "<svg",
                    '<svg xmlns="http://www.w3.org/2000/svg"'
    );
  }
  //
  //  Chunk up string in order to avoid
  //  "stack level too deep" error
  //
  $encoded: "";
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($svg)/$slice);
  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    //
    //   Encode
    //
    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, "%", "%25");
    $chunk: str-replace($chunk, "&", "%26");
    $chunk: str-replace($chunk, "#", "%23");
    $chunk: str-replace($chunk, "{", "%7B");
    $chunk: str-replace($chunk, "}", "%7D");
    $chunk: str-replace($chunk, "<", "%3C");
    $chunk: str-replace($chunk, ">", "%3E");

    //
    //    The maybe list
    //
    //    Keep size and compile time down
    //    ... only add on documented fail
    //
    //  $chunk: str-replace($chunk, '|', '%7C');
    //  $chunk: str-replace($chunk, '[', '%5B');
    //  $chunk: str-replace($chunk, ']', '%5D');
    //  $chunk: str-replace($chunk, '^', '%5E');
    //  $chunk: str-replace($chunk, '`', '%60');
    //  $chunk: str-replace($chunk, ';', '%3B');
    //  $chunk: str-replace($chunk, '?', '%3F');
    //  $chunk: str-replace($chunk, ':', '%3A');
    //  $chunk: str-replace($chunk, '@', '%40');
    //  $chunk: str-replace($chunk, '=', '%3D');

    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url("data:image/svg+xml,#{$encoded}");
}

// # BACKGROUND SVG
// ==================================
@mixin background-svg($svg) {
  background-image: svg-url($svg);
}

// SVG COLOR STRING MODIFIER
// ============================================================
@function svg-color-string-modifier($svg, $svg-color: false) {
  // Checking if a color value has been passed down
  @if($svg-color != false) {
    $svg-url: svg-url($svg);
    $svg-color-str: quote(#{$svg-color});    // Adding quotes around Hex value so its actually a string
    $svg-color: str-replace($svg-color-str, "#", "%23");    // if the color has a "#" at the start it will be removed from the string
    $svg-colored: str-replace($svg-url, "fill='%23'", "fill='#{$svg-color}'");

    @return #{$svg-colored};
  }
}

// # SVG COLOR
// =====================================
@mixin svg-color($svg, $color: false) {
  @if($color != false) {
    background-image: svg-color-string-modifier($svg, $color);
  }
  background-position: center;
  background-repeat: no-repeat;
}

$ic_menu:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
<polygon points="25.1,25.1 23.4,22.4 22.8,22.4 22.8,26.1 23.4,26.1 23.4,23.5 25.1,26.1 25.7,26.1 25.7,22.4 25.1,22.4 	"/>
<path d="M28.4,24.9c0,0.5-0.2,0.8-0.7,0.8c-0.2,0-0.4-0.1-0.6-0.2c-0.1-0.2-0.2-0.4-0.2-0.6v-2.5h-0.6v2.5c0,0.4,0.1,0.7,0.4,0.9v0 c0.6,0.5,1.4,0.5,2,0c0.3-0.2,0.4-0.6,0.4-0.9v-2.5h-0.6V24.9z"/>
<path d="M3.5,7h25C28.8,7,29,6.8,29,6.5S28.8,6,28.5,6h-25C3.2,6,3,6.2,3,6.5S3.2,7,3.5,7z"/>
<path d="M28.5,15h-25C3.2,15,3,15.2,3,15.5S3.2,16,3.5,16h25c0.3,0,0.5-0.2,0.5-0.5S28.8,15,28.5,15z"/>
<path d="M12.5,24h-9C3.2,24,3,24.2,3,24.5S3.2,25,3.5,25h9c0.3,0,0.5-0.2,0.5-0.5S12.8,24,12.5,24z"/>
<polygon points="20.7,24.5 22.2,24.5 22.2,24 20.7,24 20.7,23 22.5,23 22.5,22.4 20.1,22.4 20.1,26.1 22.5,26.1 22.5,25.6 20.7,25.6 	"/>
<polygon points="17.6,25.3 16.6,22.4 15.7,22.4 15.7,26.1 16.4,26.1 16.4,24.9 16.3,23.3 17.4,26.1 17.9,26.1 18.9,23.3 18.9,24.9 18.9,26.1 19.5,26.1 19.5,22.4 18.7,22.4 	"/>
</g>
</svg>';

$ic_search:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
<path d="M27.4,27.3L21.1,21c3.6-3.7,3.9-9.4,0.6-13.4c-3.5-4.3-9.8-4.9-14.1-1.3c-4.3,3.5-4.9,9.8-1.3,14.1 c3.5,4.3,9.8,4.9,14.1,1.3l6.3,6.3h0c0.1,0.1,0.2,0.1,0.4,0.1c0.1,0,0.3-0.1,0.4-0.1C27.6,27.8,27.6,27.5,27.4,27.3z M7.6,20.4 C4,16.9,4,11.1,7.6,7.6c1.7-1.7,4-2.7,6.4-2.7c2.4,0,4.7,1,6.4,2.7c3.5,3.5,3.6,9.3,0,12.9C16.9,24,11.1,24,7.6,20.4z"/>
</g>
</svg>';

$ic_arrow_right:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
<polygon points="11.4,4 10,5.4 20.3,16 10,26.6 11.4,28 23,16 "/>
</g>
</svg>';

$ic_arrow_left:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
<polygon points="22,5.4 20.6,4 9,16 20.6,28 22,26.6 11.7,16 "/>
</g>
</svg>';

$ic_arrow_down:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
<polygon points="26.6,11.5 16,21.8 5.4,11.5 4,12.9 16,24.5 28,12.9 "/>
</g>
</svg>';

$ic_arrow_up:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
<polygon points="16,7.5 4,19.1 5.4,20.5 16,10.2 26.6,20.5 28,19.1 "/>
</g>
</svg>';



$ic_:'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 32 32">
<g fill="#">
</g>
</svg>';


